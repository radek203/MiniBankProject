services:
  ms-sql-headquarter:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: ms-sql-headquarter
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=MyStrongPassword123
    ports:
      - "1433:1433"
    volumes:
      - sql-data-hq:/var/opt/mssql
    networks:
      - sb-network
  ms-sql-branch-1:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: ms-sql-branch-1
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=MyStrongPassword123
    ports:
      - "1434:1433"
    volumes:
      - sql-data-branch-1:/var/opt/mssql
    networks:
      - sb-network
  ms-sql-branch-2:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: ms-sql-branch-2
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=MyStrongPassword123
    ports:
      - "1435:1433"
    volumes:
      - sql-data-branch-2:/var/opt/mssql
    networks:
      - sb-network
  ms-sql-credit-card:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: ms-sql-credit-card
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=MyStrongPassword123
    ports:
      - "1436:1433"
    volumes:
      - sql-data-credit-card:/var/opt/mssql
    networks:
      - sb-network
  ms-sql-auth:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: ms-sql-auth
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=MyStrongPassword123
    ports:
      - "1437:1433"
    volumes:
      - sql-data-auth:/var/opt/mssql
    networks:
      - sb-network
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - sb-network
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    networks:
      - sb-network
  service-registry:
    build: ./ServiceRegistry
    container_name: service-registry
    ports:
      - "8761:8761"
    depends_on:
      - kafka
    healthcheck:
      test: curl --fail http://localhost:8761/actuator/health || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sb-network
  headquarter-service:
    build: ./HeadquarterService
    container_name: headquarter-service
    depends_on:
      - service-registry
    ports:
      - "8081:8081"
    networks:
      - sb-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    healthcheck:
      test: "curl --fail http://service-registry:8761/actuator/health || exit 1"
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s
  branch-service-1:
    build: ./BranchService
    container_name: branch-service-1
    depends_on:
      - service-registry
    ports:
      - "8082:8082"
    networks:
      - sb-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_APPLICATION_NAME=branch-service-1
      - BRANCH_ID=1
      - SERVER_PORT=8082
    healthcheck:
      test: "curl --fail http://service-registry:8761/actuator/health || exit 1"
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s
  branch-service-2:
    build: ./BranchService
    container_name: branch-service-2
    depends_on:
      - service-registry
    ports:
      - "8083:8083"
    networks:
      - sb-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_APPLICATION_NAME=branch-service-2
      - BRANCH_ID=2
      - SERVER_PORT=8083
    healthcheck:
      test: "curl --fail http://service-registry:8761/actuator/health || exit 1"
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s
  credit-card-service:
    build: ./CreditCardService
    container_name: credit-card-service
    depends_on:
      - service-registry
    ports:
      - "8079:8079"
    networks:
      - sb-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    healthcheck:
      test: "curl --fail http://service-registry:8761/actuator/health || exit 1"
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s
  auth-service:
    build: ./AuthService
    container_name: auth-service
    depends_on:
      - service-registry
    ports:
      - "8070:8070"
    networks:
      - sb-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    healthcheck:
      test: "curl --fail http://service-registry:8761/actuator/health || exit 1"
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s
  api-gateway:
    build: ./ApiGateway
    container_name: api-gateway
    depends_on:
      - service-registry
    ports:
      - "8060:8060"
    networks:
      - sb-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    healthcheck:
      test: "curl --fail http://service-registry:8761/actuator/health || exit 1"
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

networks:
  sb-network:

volumes:
  sql-data-hq:
  sql-data-branch-1:
  sql-data-branch-2:
  sql-data-credit-card:
  sql-data-auth: